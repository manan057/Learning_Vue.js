new Vue ==> new view instance. core of each core of view application that vue is used in.
Controls their own template of html code.
You can access all the properities and maplets using this

el: connect to dom
data: store data to be used
methods: methods of this vue instance
computed: dependent properties
watch: execute code upon data changes
v-on: listen to event

curly braces only works on text not html elements like img, a href, etc
instead of h-ref="{{link}}"; use v-bind:href="link"

Vue.js automatically fetches arguments

* Synchronous *
Everything you use from computed method can be used as properties
Things in computed doesn't get executed everytime
-- computed caches the result
Use computed when you can

* Asynschronous *
To react to every change or to use async tasks
watch only happens after a specific trigger
eg. api call

call back closures can't access propertities so you have to store them in varibales
right before the functions
eg. var vm = this;
    setTimeout(function() {
      //closure
      vm.counter = 0;
    }, 2000);


### Shortcuts ###
v-on:click ==> @click
v-bind:href ==> :href

use <template> to group html elements and show/toggle
v-if is used by deafult and is better performance wise
v-if: completely detaches or detaches elements in the dom
v-show: only hides or shows the elements in the dom. the elements stay in the dom
For sorting use v-bind or :key="something" where something can be an index or at unique string itself

Vue instances can be accessed from outside. So they are muttable.
#Just make sure you assign them to variables

$el: referes to our native html elemet/template
$data: holds data properities
this.$refs.myButton.innerText == "Blah" will change the name
  --> can modify properties of objects $refs

Vue Api ==> allows you to modify properties from outside the object
$mount is the same as the el property eg: vm1.$mount('#app1')

Global component ==> Vue.component('name', {});
Local component ==> var = {} which is a object instance then
You have to declare the component in the Vue instance like so:
  new Vue({
    el: '#app1',
    components: {
      'name-of-html-tag': var
    }
  })

data object must be a function that returns a n object
#wrap all the html elements in a div if you use <template>
<style scoped> ==> style will only be applied in the current file otherwise the style are defined globally
